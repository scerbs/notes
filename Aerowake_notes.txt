For acknowledgement, find pixhawk rover parameter that can be used by UAV to relay a message back to gcs.
  Found: ACRO_TURN_RATE
  if no acknowledgement received, try again (maybe once or twice) and if nothing return a message saying that
  issue: need to be constant checking if UAV changes a parameter, maybe using a callback?
  resolved: gcs only needs to check when a user input is sent (so can check inside gcs while loop)
    control code while loop (inside try statement) at very end, after valid input check
  how do we check that command has been received?
    need to keep track of previous state of parameter, if parameter doesn't change to what is expected, we know that command wasn't received
  what if same command is given twice?
    when second time a command is given in a row, the gcs will automatically think it has been received (parameter doesn't change)
    fix this by maybe resetting parameter to set value at start of control loop?
  UAV: need to write something within listening loop that will change a parameter if information received
    this one should be pretty easy, only change the parameter when a command is received, so change it right before executing, making use of the same loop


  bugs:
    make sure UAV not receiving command works
    current implementation uses sleeping to account for radio delay, may need a better way to go around this.  Set up a listener?

TODO for initial script
  figure out rotate_mission.py, need to make it return something instead of writing to a file
  figure out how to input a degree rotation in gcs terminal, already added to allowed commands str but need a way to read it
  figure out how to interpret input, need to be able to constantly rotate mission
    for this, do we want to reset heading each time, or change it from magnetic north?
      i.e. if we rotate by 15 degress, then want to rotate again by 15, do we input 15 again or 30?
        ask brandon about this one, as long as it is defined i doubt he will have a preference
    this might be easy because we can just input the same mission, then import rotate_mission.py for both uav and gcs so when gcs sends a command, the mission rotates the same for both
  figure out how we want to handle input
    do we want to use a listener or just an input command?
      command might make more sense, as it is something that should be done in sequence
